<?php

namespace App\Filament\Resources\FolderResource\Pages;

use App\Filament\Resources\FolderResource;
use App\Models\Content;
use App\Models\Folder;
use App\Models\ThumbDown;
use Filament\Pages\Actions;
use Filament\Pages\Actions\Action;
use Filament\Pages\Page;
use Filament\Resources\Pages\ListRecords;
use Filament\Tables\Columns\BadgeColumn;
use Filament\Tables\Columns\TextColumn;
use Illuminate\Database\Eloquent\Builder;

class ThumbLogs extends ListRecords
{
    protected static string $resource = FolderResource::class;

    public $folder_id;

    protected function getActions(): array
    {

        return [
            Action::make('index')->url(route('filament.resources.folders.view',$this->folder_id))->label('Back'),
        ];
       // return parent::getActions(); // TODO: Change the autogenerated stub
    }

    protected function getTitle(): string
    {
        return 'Thumb logs'; // TODO: Change the autogenerated stub
    }


    protected function getBreadcrumbs(): array
    {
        return []; // TODO: Change the autogenerated stub
    }

    public function mount(): void
    {
        $this->folder_id = \request()->route('record');

    }

    protected function getTableQuery(): Builder
    {
        return ThumbDown::where('folder_id',$this->folder_id)->latest();
    }

    protected function getTableColumns(): array
    {
        return [
            TextColumn::make('question')->label('Question')->searchable()->sortable(),
            TextColumn::make('answer')->limit(30)->tooltip(fn($record) => $record->answer)->label('Answer')->searchable()->sortable()
            ];

    }
    protected function getTableActions(): array
    {

        return [
            \Filament\Tables\Actions\Action::make('Teach')->url(function ($record){

                return route('filament.resources.contents.create')."?folder_id=".$this->folder_id."&type=txt&q=".$record->question."-".$record->answer;
            })
            ,parent::getTableActions()[2]]; // TODO: Change the autogenerated stub
    }


}
